<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
     ">

	<context:annotation-config />

	<context:component-scan base-package="org.william" />

	<context:property-placeholder location="classpath:app.properties"
		file-encoding="UTF-8" ignore-unresolvable="true" />

	<!-- mysql配置 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- MapperScanner baseDao写法不需要配置 -->
	<bean id="scanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.william.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- redis config -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnFactory" />
	</bean>

	<!-- mongo config -->
	<mongo:db-factory id="mongoDbFactory" host="${mongo.host}"
		port="${mongo.port}" dbname="${mongo.database}" />

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<!-- spring schedule task job xml配置方式 -->
	<task:scheduled-tasks>
		<task:scheduled ref="springTaskJobByXml" method="springTaskJob"
			cron="0/5 * * * * ?" />
	</task:scheduled-tasks>

	<!-- spring schedule task job @Scheduled注解方式 -->
	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->
	<task:annotation-driven scheduler="scheduler"
		executor="executor" mode="proxy" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="executor" pool-size="10" />
	
	<!-- redis发送/订阅消息 -->
    <bean id="redisMessageListener" class="org.william.service.RedisMessageListener" />

    <bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="3"></property>
            </bean>
        </property>
        <property name="messageListeners">
            <map>
                <entry key-ref="redisMessageListener">
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="sendStudentMsg"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    
    <!-- 异步线程池 -->  
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
	    <!-- 线程池维护线程的最少数量 -->  
	<property name ="corePoolSize" value ="5" />  
	    <!-- 线程池维护线程所允许的空闲时间 -->  
	<property name ="keepAliveSeconds" value ="30000" />  
	    <!-- 线程池维护线程的最大数量 -->  
	<property name ="maxPoolSize" value ="1000" />  
	    <!-- 线程池所使用的缓冲队列 -->  
	<property name ="queueCapacity" value ="200" />  
	</bean>
	
	<!-- spring事务管理(全注解方式) -->
    <tx:annotation-driven transaction-manager="demoTransactionManager"/>
	
	 <bean id="demoTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
     </bean>

</beans>